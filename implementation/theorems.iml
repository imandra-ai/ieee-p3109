[@@@import Implementation, "dune:implementation"]
[@@@import Specification, "dune:specification"]

open Implementation

let unroll_nonlin qt nqt steps = Tactic.unroll ~smt:"z3-full-nonlinear" ~query_timeout:qt ~no_asm_query_timeout:nqt steps

(** Proof that our implementation of [abs] is correct *)
theorem correct_abs (f : Format.t) (x : Float8.t) =
  Implementation.Float8.abs f x = Specification.Float8.abs f x
  [@@by enumerate ["f"; "x"] @> ground_eval]
  [@@timeout 10]

(** Proof that our implementation of [negate] is correct *)
theorem correct_negate (f:Format.t) (x:Float8.t) =
  Implementation.Float8.negate f x = Specification.Float8.negate f x
  [@@by enumerate ["f"; "x"] @> ground_eval]
  [@@timeout 10]

(** Proof that our implementation of [is_zero] is correct *)
theorem correct_is_zero (f : Format.t) (x : Float8.t) =
  Implementation.Float8.is_zero f x = Specification.Float8.is_zero f x
  [@@by enumerate ["f"; "x"] @> ground_eval]
  [@@timeout 10]

(** Proof that our implementation of [is_one] is correct *)
theorem correct_is_one (f : Format.t) (x : Float8.t) =
  Implementation.Float8.is_one f x = Specification.Float8.is_one f x
  [@@by enumerate ["f"; "x"] @> ground_eval]
  [@@timeout 10]

(** Proof that our implementation of [is_nan] is correct *)
theorem correct_is_nan (f : Format.t) (x : Float8.t) =
  Implementation.Float8.is_nan f x = Specification.Float8.is_nan f x
  [@@by enumerate ["f"; "x"] @> ground_eval]
  [@@timeout 10]

(** Proof that our implementation of [is_sign_minus] is correct *)
theorem correct_is_sign_minus (f : Format.t) (x : Float8.t) =
  Implementation.Float8.is_sign_minus f x = Specification.Float8.is_sign_minus f x
  [@@by enumerate ["f"; "x"] @> ground_eval]
  [@@timeout 10]

(** Proof that our implementation of [is_normal] is correct *)
theorem correct_is_normal (f : Format.t) (x : Float8.t) =
  Implementation.Float8.is_normal f x = Specification.Float8.is_normal f x
  [@@by enumerate ["f"; "x"] @> ground_eval]
  [@@timeout 10]

(** Proof that our implementation of [is_subnormal] is correct *)
theorem correct_is_subnormal (f : Format.t) (x : Float8.t) =
  Implementation.Float8.is_subnormal f x = Specification.Float8.is_subnormal f x
  [@@by enumerate ["f"; "x"] @> ground_eval]
  [@@timeout 10]
