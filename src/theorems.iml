[@@@import "p3109.iml"]
[@@@import "math.iml"]
[@@@import "model.iml"]

open P3109

(** Precision is between 1 and 7 in all supported formats *)
theorem precision_1_7 (f:Format.t) =
  1 <= Model.precision f && Model.precision f <= 7

(** All float8s are classified *)
theorem no_no_class (x:Float8.t) (fmt:Format.t) =
  (Float8.class_ x fmt) <> Float8.NoClass

(** Proof that our implementation of [is_nan] is correct *)
theorem correct_is_nan (x:Float8.t) =
  Float8.is_nan x = Model.is_nan x

(** Proof that our implementation of [of_int_bitwise] is correct *)
theorem correct_of_int_bitwise (x:int) =
  Float8.of_int_bitwise x = Model.of_int_bitwise x


(** Proof that our implementation of [negate] is correct *)

(* First for special values (this is fast) *)
theorem correct_negate_special (x:Float8.t) (fmt:Format.t) =
  Float8.is_nan x || Float8.is_ninf x || Float8.is_pinf x ==>
  Float8.negate x fmt = Model.negate x fmt

(* Then the general case (way too slow) *)
theorem correct_negate (x:Float8.t) (fmt:Format.t) =
  Float8.negate x fmt = Model.negate x fmt
  [@@by auto] [@@timeout 3600]