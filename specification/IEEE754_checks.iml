[@@@import IEEE754, "IEEE754.iml"]

open IEEE754
open ExReal

let smallest_nz_b32 = Util.pow2 (-149)
let largest_subnormal_b32 = Util.pow2 (-148)
let smallest_normal_b32 = Util.pow2 (-126)
let largest_normal_b32 = Util.pow2 127 *. (2.0 -. Util.pow2 (-23))

eval pp (round (R 0.0) Format.Binary32 RoundingMode.TowardZero)
eval pp (round (R 32.0) Format.Binary32 RoundingMode.TowardZero)
eval pp (round (R 19.123) Format.Binary32 RoundingMode.TowardZero)
eval pp (round (R 0.00390625) Format.Binary32 RoundingMode.TowardZero)
eval pp (round (R 21.0) Format.Binary32 RoundingMode.TowardZero)
eval pp (round (R 2.0) Format.Binary32 RoundingMode.TowardZero)
eval List.length (round (R 2.0) Format.Binary32 RoundingMode.TowardZero)
eval pp (round (R (- 1.0)) Format.Binary32 RoundingMode.TowardZero)
eval pp (round (R 0.125) Format.Binary32 RoundingMode.TowardZero)
eval pp (round (R smallest_nz_b32) Format.Binary32 RoundingMode.TowardZero)
eval pp (round (R largest_subnormal_b32) Format.Binary32 RoundingMode.TowardZero)
eval pp (round (R smallest_normal_b32) Format.Binary32 RoundingMode.TowardZero)
eval pp (round (R largest_normal_b32) Format.Binary32 RoundingMode.TowardZero)
eval pp (round PINF Format.Binary32 RoundingMode.TowardZero)
eval pp (round (R 0.0) Format.Binary32 RoundingMode.TowardNegative)
eval pp (round (R (largest_normal_b32 *. 2.0)) Format.Binary32 RoundingMode.TowardZero)

eval to_exreal (round (R 0.0) Format.Binary32 RoundingMode.TowardZero) Format.Binary32
eval to_exreal (round (R 21.0) Format.Binary32 RoundingMode.TowardZero) Format.Binary32
eval to_exreal (round (R 0.125) Format.Binary32 RoundingMode.TowardZero) Format.Binary32
eval to_exreal (round (R smallest_nz_b32) Format.Binary32 RoundingMode.TowardZero) Format.Binary32
eval to_exreal (round (R largest_subnormal_b32) Format.Binary32 RoundingMode.TowardZero) Format.Binary32
eval to_exreal (round (R smallest_normal_b32) Format.Binary32 RoundingMode.TowardZero) Format.Binary32
eval to_exreal (round (R largest_normal_b32) Format.Binary32 RoundingMode.TowardZero) Format.Binary32
eval to_exreal (pinf Format.Binary32) Format.Binary32
eval to_exreal (round (R (largest_normal_b32 +. 1.0)) Format.Binary32 RoundingMode.TowardZero) Format.Binary32

let roundtrip32 (x : t) : (t, string) Result.t =
  (* convert extended real to IEEE754 single and back again *)
  to_exreal (round x Format.Binary32 RoundingMode.TowardZero) Format.Binary32

verify (roundtrip32 (R 0.0) = Ok (R 0.0)) [@@by auto]
verify (roundtrip32 (R 1.0) = Ok (R 1.0)) [@@by auto]
verify (roundtrip32 (R (-1.0)) = Ok (R (-1.0))) [@@by auto]
verify (roundtrip32 (R 21.0) = Ok (R 21.0)) [@@by auto]
verify (roundtrip32 (R (- 21.0)) = Ok (R (- 21.0))) [@@by auto]
verify (roundtrip32 (R 0.125) = Ok (R 0.125)) [@@by auto]
verify (roundtrip32 PINF = Ok PINF) [@@by auto]
verify (roundtrip32 NINF = Ok NINF) [@@by auto]
verify (roundtrip32 (R smallest_nz_b32) = Ok (R smallest_nz_b32)) [@@by auto]
verify (roundtrip32 (R largest_subnormal_b32) = Ok (R largest_subnormal_b32)) [@@by auto]
verify (roundtrip32 (R smallest_normal_b32) = Ok (R smallest_normal_b32)) [@@by auto]
verify (roundtrip32 (R largest_normal_b32) = Ok (R largest_normal_b32)) [@@by auto]
verify (roundtrip32 (R (largest_normal_b32 *. 2.0)) = Ok PINF) [@@by auto]

(* -0.0 doesn't survive a tround-trip *)
verify (is_nzero (round (R 0.0) Format.Binary32 RoundingMode.TowardNegative)) [@@by auto]
verify (to_exreal (round (R 0.0) Format.Binary32 RoundingMode.TowardNegative) Format.Binary32 = Ok (R 0.0)) [@@by auto]