[@@@import Util, "dune:math"]
[@@@import ExReal, "dune:math"]
[@@@import Specification, "specification.iml"]

open Specification
open ExReal
open ExReal.Infix

let is_within_range (x : Float8.t) (fmt : Format.t) : bool =
  (not (Float8.is_nan x || Float8.is_inf x))
    ==>
  let _, _, max = Format.get_format_parameters fmt in
  let r = Float8.to_extended_real x fmt in
  R (-. max) <= r && r <= R max

theorem thm_fmt_range_p7 (x : Float8.t) (fmt : Format.t) =
  fmt = Format.B8P7 ==> is_within_range x fmt
  [@@by auto]
  [@@timeout 20]

theorem thm_fmt_range_p6 (x : Float8.t) (fmt : Format.t) =
  fmt = Format.B8P6 ==> is_within_range x fmt
  [@@by auto]
  [@@timeout 60]
  [@@fc]

theorem thm_fmt_range_p5 (x : Float8.t) (fmt : Format.t) =
  fmt = Format.B8P5 ==> is_within_range x fmt
  [@@by auto]
  [@@timeout 60]

theorem thm_fmt_range_p4 (x : Float8.t) (fmt : Format.t) =
  fmt = Format.B8P4 ==> is_within_range x fmt
  [@@by auto]
  [@@timeout 120]

theorem thm_fmt_range_p3 (x : Float8.t) (fmt : Format.t) =
  fmt = Format.B8P3 ==> is_within_range x fmt
  [@@by auto]
  [@@timeout 120]

theorem thm_fmt_range_p2 (x : Float8.t) (fmt : Format.t) =
  fmt = Format.B8P2 ==> is_within_range x fmt
  [@@by auto]
  [@@timeout 120]

theorem thm_fmt_range_p1 (x : Float8.t) (fmt : Format.t) =
  fmt = Format.B8P1 ==> is_within_range x fmt
  [@@by auto]
  [@@timeout 120]

theorem thm_within_format_range (x : Float8.t) (fmt : Format.t) =
  is_within_range x fmt
  [@@by
    [%use thm_fmt_range_p7 x fmt] @>
    [%use thm_fmt_range_p6 x fmt] @>
    [%use thm_fmt_range_p5 x fmt] @>
    [%use thm_fmt_range_p4 x fmt] @>
    [%use thm_fmt_range_p3 x fmt] @>
    [%use thm_fmt_range_p2 x fmt] @>
    [%use thm_fmt_range_p1 x fmt] @>
    unroll 0]
  [@@timeout 10]